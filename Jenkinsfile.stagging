pipeline{
    agent any
    environment{
        AWS_REGION = 'us-east-1'
        DOCKER_IMAGE = 'node-app'
        docker_username = 'kartik2311'
    }
    
    stages{
        stage(checkout){
            steps{
                checkout scm
            }
        }
        stage('docker login,Build,tag and push'){
            steps{
                withCredentials([
                              usernamePassword(
                                credentialsId: 'dockerhub',
                                usernameVariable: 'docker_username',
                                passwordVariable: 'docker_password'
                            ),
                            [$class: 'AmazonWebServicesCredentialsBinding', 
                               credentialsId: 'AWS-KEYS']
                            
                             ]){
                    sh '''
                    echo $docker_password | docker login -u $docker_username --password-stdin
                    echo "Run docker build for backend"
                    cd backend
                    docker build -t $DOCKER_IMAGE:git-${GIT_COMMIT} .
                    docker tag $DOCKER_IMAGE:git-${GIT_COMMIT} $docker_username/$DOCKER_IMAGE:git-${GIT_COMMIT}
                    docker push $docker_username/$DOCKER_IMAGE:git-${GIT_COMMIT}
                    '''
                    
                }
                
                
            }  

        }

        stage('Test'){
         steps{
            sh '''

            docker rm -f node-test-container || true

            echo "backend test stage"
            docker run -d -p 5002:5002  --name node-test-container  $docker_username/$DOCKER_IMAGE:git-${GIT_COMMIT}
            sleep 10
            curl -f http://localhost:5002/api/message || exit 1
            curl -f http://localhost:5002/api/info || exit 1
            sleep 5
            echo "Tests passed successfully"
            docker stop node-test-container
            docker rm node-test-container  
            '''
         }
        }
        stage('Deploy'){
         steps{
         withCredentials([
            [$class: 'AmazonWebServicesCredentialsBinding', 
             credentialsId: 'AWS-KEYS']
         ]){
            sh '''
            echo "Deploying to AWS EC2 staging instance by SSM"
            aws configure set region $AWS_REGION
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

            aws ssm send-command \
            --instance-ids "i-0c3c0112af4dd2de4" \
            --document-name "AWS-RunShellScript" \
            --comment "Jenkins deployment" \
            --cloud-watch-output-config '{"CloudWatchLogGroupName":"jenkins-deploy-logs","CloudWatchOutputEnabled":true}'\

            
            --parameters '{
              "commands": [
               "docker pull $docker_username/react-frontend:git-${GIT_COMMIT}",
               "docker pull $docker_username/$DOCKER_IMAGE:git-${GIT_COMMIT}",
               "docker stop node-frontend-container || true",
               "docker rm node-frontend-container || true",
               "docker stop node-backend-container || true",
               "docker rm node-backend-container || true",
               "docker run -d -p 3000:3000 --name node-frontend-container $docker_username/react-frontend:git-${GIT_COMMIT}",
               "docker run -d -p 5002:5002 --name node-backend-container $docker_username/$DOCKER_IMAGE:git-${GIT_COMMIT}"
             ]
            }'

            echo "Deployment completed"
            '''
          }
          }      
        }

    }
}